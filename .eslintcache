[{"D:\\wagby\\react\\study\\nivo_test\\src\\index.js":"1","D:\\wagby\\react\\study\\nivo_test\\src\\App.js":"2","D:\\wagby\\react\\study\\nivo_test\\src\\nivo\\NivoBarChart.js":"3","D:\\wagby\\react\\study\\nivo_test\\src\\nivo\\DataProvider.js":"4","D:\\wagby\\react\\study\\nivo_test\\src\\nivo\\NivoLineChart.js":"5","D:\\wagby\\react\\study\\nivo_test\\src\\nivo\\NivoPieChart.js":"6"},{"size":179,"mtime":1612149993503,"results":"7","hashOfConfig":"8"},{"size":1507,"mtime":1612219777048,"results":"9","hashOfConfig":"8"},{"size":3246,"mtime":1612161031531,"results":"10","hashOfConfig":"8"},{"size":1951,"mtime":1612219762794,"results":"11","hashOfConfig":"8"},{"size":2738,"mtime":1612161489234,"results":"12","hashOfConfig":"8"},{"size":1833,"mtime":1612219290453,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1sp312c",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\wagby\\react\\study\\nivo_test\\src\\index.js",[],"D:\\wagby\\react\\study\\nivo_test\\src\\App.js",[],"D:\\wagby\\react\\study\\nivo_test\\src\\nivo\\NivoBarChart.js",["27"],"import React, {useEffect, useState} from 'react';\r\nimport {ResponsiveBar} from \"@nivo/bar\";\r\nimport {Switch, makeStyles, Grid} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles({\r\n  chartArea: {\r\n    height: '600px',\r\n  }\r\n});\r\n\r\n\r\nexport const NivoBarChart = ({data}) => {\r\n  const classes = useStyles();\r\n\r\n  const [state, setState] = useState({\r\n    groupModeStacked: true,\r\n    chartLayoutVertical: true,\r\n  });\r\n\r\n  const [groupMode, setGroupMode] = useState(\r\n    state.groupModeStacked ? 'stacked' : 'grouped'\r\n  );\r\n  const [chartLayout, setChartLayout] = useState(\r\n    state.chartLayoutVertical ? 'vertical' : 'horizontal'\r\n  )\r\n\r\n  const handleGroupMode = (ev) => {\r\n    setState({\r\n      ...state,\r\n      [ev.target.name]: ev.target.checked\r\n    });\r\n    setGroupMode(ev.target.checked ? 'stacked' : 'grouped');\r\n  };\r\n  const handleChartLayout = (ev) => {\r\n    setState({\r\n      ...state,\r\n      [ev.target.name]: ev.target.checked\r\n    });\r\n    setChartLayout(ev.target.checked ? 'vertical' : 'horizontal');\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Grid container spacing={5}>\r\n        <Grid item>\r\n          <span>Group</span>\r\n          <Switch checked={state.groupModeStacked}\r\n                  onChange={handleGroupMode}\r\n                  name={'groupModeStacked'}/>\r\n          <span>Stack</span>\r\n        </Grid>\r\n        <Grid item>\r\n          <span>水平</span>\r\n          <Switch checked={state.chartLayoutVertical}\r\n                  onChange={handleChartLayout}\r\n                  name={'chartLayoutVertical'}/>\r\n          <span>垂直</span>\r\n        </Grid>\r\n      </Grid>\r\n\r\n\r\n      <div className={classes.chartArea}>\r\n        <ResponsiveBar\r\n          data={data}\r\n          // indexBy={'month'} 'id' is the default\r\n          keys={['肉', '魚', '野菜']}\r\n          groupMode={groupMode}\r\n          layout={chartLayout}\r\n\r\n          margin={{top: 50, right: 130, bottom: 50, left: 60}}\r\n          padding={0.2}\r\n          colors={{scheme: 'paired'}}\r\n\r\n\r\n          borderWidth={1}\r\n          borderColor={{from: 'color', modifiers: [['darker', 1.6]]}}\r\n\r\n          axisTop={null}\r\n          axisRight={null}\r\n          axisBottom={{\r\n            tickSize: 5, tickPadding: 5, tickRotation: 0,\r\n            legend: '年月', legendPosition: 'middle', legendOffset: 42\r\n          }}\r\n          axisLeft={{\r\n            tickSize: 5, tickPadding: 5, tickRotation: 0,\r\n            legend: '消費量', legendPosition: 'middle', legendOffset: -40\r\n          }}\r\n          labelSkipWidth={12}\r\n          labelSkipHeight={12}\r\n          labelTextColor={{from: 'color', modifiers: [['brighter', 1.6]]}}\r\n          legends={[\r\n            {\r\n              dataFrom: 'keys',\r\n              anchor: 'bottom-right',\r\n              direction: 'column',\r\n              justify: true,\r\n              translateX: 120,\r\n              translateY: 0,\r\n              itemsSpacing: 3,\r\n              itemWidth: 100,\r\n              itemHeight: 20,\r\n              itemDirection: 'left-to-right',\r\n              itemOpacity: 0.7,\r\n              symbolSize: 20,\r\n              effects: [{\r\n                on: 'hover', style: {itemOpacity: 1}\r\n              }]\r\n\r\n            }\r\n          ]}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}","D:\\wagby\\react\\study\\nivo_test\\src\\nivo\\DataProvider.js",[],"D:\\wagby\\react\\study\\nivo_test\\src\\nivo\\NivoLineChart.js",[],"D:\\wagby\\react\\study\\nivo_test\\src\\nivo\\NivoPieChart.js",[],{"ruleId":"28","severity":1,"message":"29","line":1,"column":16,"nodeType":"30","messageId":"31","endLine":1,"endColumn":25},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar"]